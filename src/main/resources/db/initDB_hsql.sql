DROP TABLE VOTE IF EXISTS;
DROP TABLE DISH IF EXISTS;
DROP TABLE MENU IF EXISTS;
DROP TABLE RESTAURANT IF EXISTS;
DROP TABLE USER_ROLES IF EXISTS;
DROP TABLE USERS IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE global_seq AS INTEGER START WITH 100000;

CREATE TABLE users
(
    id         INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    name       VARCHAR(100) NOT NULL,
    password   VARCHAR(255) NOT NULL,
    email      VARCHAR(100) NOT NULL,
    registered TIMESTAMP DEFAULT now(),
    enabled    BOOLEAN   DEFAULT TRUE
);
CREATE UNIQUE INDEX email_unique_idx ON users (email);

CREATE TABLE user_roles
(
    user_id INTEGER      NOT NULL,
    role    VARCHAR(100) NOT NULL,
    CONSTRAINT user_role_fk FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX user_role_unique_idx ON user_roles (user_id, role);

CREATE TABLE restaurant
(
    id   INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
CREATE UNIQUE INDEX unique_restaurant ON restaurant (name);

CREATE TABLE menu
(
    id            INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    menu_date     DATE    NOT NULL,
    restaurant_id INTEGER NOT NULL,

    CONSTRAINT menu_restaurant_fk FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX unique_menu ON menu (menu_date, restaurant_id);

CREATE TABLE dish
(
    id      INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    name    VARCHAR(255) NOT NULL,
    price   INTEGER      NOT NULL,
    menu_id INTEGER      NOT NULL,

    CONSTRAINT dish_menu_fk FOREIGN KEY (menu_id) REFERENCES menu (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX unique_dish ON dish (menu_id, name);

CREATE TABLE vote
(
    id        INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    vote_date DATE    NOT NULL,
    user_id   INTEGER NOT NULL,
    menu_id   INTEGER NOT NULL,
    CONSTRAINT user_id_fk FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT menu_id_fk FOREIGN KEY (menu_id) REFERENCES menu (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX unique_vote ON vote (vote_date, user_id);